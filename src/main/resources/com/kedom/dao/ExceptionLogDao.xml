<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kedom.dao.ExceptionLogDao">

    <resultMap type="com.kedom.entity.ExceptionLog" id="ExceptionLogMap">
        <result property="exceptionId" column="id" jdbcType="INTEGER"/>
        <result property="exceptionUrl" column="exception_url" jdbcType="VARCHAR"/>
        <result property="exceptionClassName" column="exception_class_name" jdbcType="VARCHAR"/>
        <result property="exceptionMethodName" column="exception_method_name" jdbcType="VARCHAR"/>
        <result property="exceptionMessage" column="exception_message" jdbcType="VARCHAR"/>
        <result property="exceptionTime" column="exception_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ExceptionLogMap">
        select
          id, exception_url, exception_class_name, exception_method_name, exception_message, exception_time
        from exception_log
        where id = #{exceptionId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ExceptionLogMap">
        select
          id, exception_url, exception_class_name, exception_method_name, exception_message, exception_time
        from exception_log
        <where>
            <if test="exceptionId != null">
                and exception_id = #{exceptionId}
            </if>
            <if test="exceptionUrl != null and exceptionUrl != ''">
                and exception_url = #{exceptionUrl}
            </if>
            <if test="exceptionClassName != null and exceptionClassName != ''">
                and exception_class_name = #{exceptionClassName}
            </if>
            <if test="exceptionMethodName != null and exceptionMethodName != ''">
                and exception_method_name = #{exceptionMethodName}
            </if>
            <if test="exceptionMessage != null and exceptionMessage != ''">
                and exception_message = #{exceptionMessage}
            </if>
            <if test="exceptionTime != null">
                and exception_time = #{exceptionTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from exception_log
        <where>
            <if test="exceptionId != null">
                and exception_id = #{exceptionId}
            </if>
            <if test="exceptionUrl != null and exceptionUrl != ''">
                and exception_url = #{exceptionUrl}
            </if>
            <if test="exceptionClassName != null and exceptionClassName != ''">
                and exception_class_name = #{exceptionClassName}
            </if>
            <if test="exceptionMethodName != null and exceptionMethodName != ''">
                and exception_method_name = #{exceptionMethodName}
            </if>
            <if test="exceptionMessage != null and exceptionMessage != ''">
                and exception_message = #{exceptionMessage}
            </if>
            <if test="exceptionTime != null">
                and exception_time = #{exceptionTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="exceptionId" useGeneratedKeys="true">
        insert into exception_log(exception_url, exception_class_name, exception_method_name, exception_message, exception_time)
        values (#{exceptionUrl}, #{exceptionClassName}, #{exceptionMethodName}, #{exceptionMessage}, #{exceptionTime})
    </insert>

    <insert id="insertBatch" keyProperty="exceptionId" useGeneratedKeys="true">
        insert into exception_log(exception_url, exception_class_name, exception_method_name, exception_message, exception_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.exceptionUrl}, #{entity.exceptionClassName}, #{entity.exceptionMethodName}, #{entity.exceptionMessage}, #{entity.exceptionTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="exceptionId" useGeneratedKeys="true">
        insert into exception_log(exception_url, exception_class_name, exception_method_name, exception_message, exception_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.exceptionUrl}, #{entity.exceptionClassName}, #{entity.exceptionMethodName}, #{entity.exceptionMessage}, #{entity.exceptionTime})
        </foreach>
        on duplicate key update
        exception_url = values(exception_url),
        exception_class_name = values(exception_class_name),
        exception_method_name = values(exception_method_name),
        exception_message = values(exception_message),
        exception_time = values(exception_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update exception_log
        <set>
            <if test="exceptionUrl != null and exceptionUrl != ''">
                exception_url = #{exceptionUrl},
            </if>
            <if test="exceptionClassName != null and exceptionClassName != ''">
                exception_class_name = #{exceptionClassName},
            </if>
            <if test="exceptionMethodName != null and exceptionMethodName != ''">
                exception_method_name = #{exceptionMethodName},
            </if>
            <if test="exceptionMessage != null and exceptionMessage != ''">
                exception_message = #{exceptionMessage},
            </if>
            <if test="exceptionTime != null">
                exception_time = #{exceptionTime},
            </if>
        </set>
        where exception_id = #{exceptionId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from exception_log where id = #{exceptionId}
    </delete>

</mapper>

